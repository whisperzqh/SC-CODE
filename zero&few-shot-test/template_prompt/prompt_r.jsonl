{"path": "GitHub-Crawler-R/paws-main/paws/R/costexplorer_operations.R", "language": "r", "code": "costexplorer_untag_resource <- function(ResourceArn, ResourceTagKeys) {\nop <- new_operation(\nname = \"UntagResource\",\nhttp_method = \"POST\",\nhttp_path = \"/\",\npaginator = list()\n)\ninput <- .costexplorer$untag_resource_input(ResourceArn = ResourceArn, ResourceTagKeys = ResourceTagKeys)\noutput <- .costexplorer$untag_resource_output()\nconfig <- get_config()\nsvc <- .costexplorer$service(config)\nrequest <- new_request(svc, op, input, output)\nresponse <- send_request(request)\nreturn(response)\n}", "code_tokens": ["cost", "expl", "orer", "_", "unt", "ag", "_", "resource", "Ġ<-", "Ġfunction", "(", "Resource", "Ar", "n", ",", "ĠResource", "Tag", "Keys", ")", "Ġ{", "Ġop", "Ġ<-", "Ġnew", "_", "operation", "(", "Ġname", "Ġ=", "Ġ\"", "Unt", "ag", "Resource", "\",", "Ġhttp", "_", "method", "Ġ=", "Ġ\"", "POST", "\",", "Ġhttp", "_", "path", "Ġ=", "Ġ\"/", "\",", "Ġpag", "inator", "Ġ=", "Ġlist", "()", "Ġ)", "Ġinput", "Ġ<-", "Ġ.", "cost", "expl", "orer", "$", "unt", "ag", "_", "resource", "_", "input", "(", "Resource", "Ar", "n", "Ġ=", "ĠResource", "Ar", "n", ",", "ĠResource", "Tag", "Keys", "Ġ=", "ĠResource", "Tag", "Keys", ")", "Ġoutput", "Ġ<-", "Ġ.", "cost", "expl", "orer", "$", "unt", "ag", "_", "resource", "_", "output", "()", "Ġconfig", "Ġ<-", "Ġget", "_", "config", "()", "Ġs", "vc", "Ġ<-", "Ġ.", "cost", "expl", "orer", "$", "service", "(", "config", ")", "Ġrequest", "Ġ<-", "Ġnew", "_", "request", "(", "sv", "c", ",", "Ġop", ",", "Ġinput", ",", "Ġoutput", ")", "Ġresponse", "Ġ<-", "Ġsend", "_", "request", "(", "request", ")", "Ġreturn", "(", "response", ")", "Ġ}"], "docstring": "Removes one or more tags from a resource", "docstring_tokens": ["Rem", "oves", "Ġone", "Ġor", "Ġmore", "Ġtags", "Ġfrom", "Ġa", "Ġresource"], "partition": "valid"}
{"path": "GitHub-Crawler-R/paws-main/paws/R/neptune_operations.R", "language": "r", "code": "neptune_modify_event_subscription <- function(SubscriptionName, SnsTopicArn = NULL, SourceType = NULL, EventCategories = NULL, Enabled = NULL) {\nop <- new_operation(\nname = \"ModifyEventSubscription\",\nhttp_method = \"POST\",\nhttp_path = \"/\",\npaginator = list()\n)\ninput <- .neptune$modify_event_subscription_input(SubscriptionName = SubscriptionName, SnsTopicArn = SnsTopicArn, SourceType = SourceType, EventCategories = EventCategories, Enabled = Enabled)\noutput <- .neptune$modify_event_subscription_output()\nconfig <- get_config()\nsvc <- .neptune$service(config)\nrequest <- new_request(svc, op, input, output)\nresponse <- send_request(request)\nreturn(response)\n}", "code_tokens": ["ne", "pt", "une", "_", "mod", "ify", "_", "event", "_", "sub", "scription", "Ġ<-", "Ġfunction", "(", "Sub", "scription", "Name", ",", "ĠSn", "s", "Topic", "Ar", "n", "Ġ=", "ĠNULL", ",", "ĠSource", "Type", "Ġ=", "ĠNULL", ",", "ĠEvent", "C", "ategories", "Ġ=", "ĠNULL", ",", "ĠEnabled", "Ġ=", "ĠNULL", ")", "Ġ{", "Ġop", "Ġ<-", "Ġnew", "_", "operation", "(", "Ġname", "Ġ=", "Ġ\"", "Mod", "ify", "Event", "Sub", "scription", "\",", "Ġhttp", "_", "method", "Ġ=", "Ġ\"", "POST", "\",", "Ġhttp", "_", "path", "Ġ=", "Ġ\"/", "\",", "Ġpag", "inator", "Ġ=", "Ġlist", "()", "Ġ)", "Ġinput", "Ġ<-", "Ġ.", "ne", "pt", "une", "$", "mod", "ify", "_", "event", "_", "sub", "scription", "_", "input", "(", "Sub", "scription", "Name", "Ġ=", "ĠSub", "scription", "Name", ",", "ĠSn", "s", "Topic", "Ar", "n", "Ġ=", "ĠSn", "s", "Topic", "Ar", "n", ",", "ĠSource", "Type", "Ġ=", "ĠSource", "Type", ",", "ĠEvent", "C", "ategories", "Ġ=", "ĠEvent", "C", "ategories", ",", "ĠEnabled", "Ġ=", "ĠEnabled", ")", "Ġoutput", "Ġ<-", "Ġ.", "ne", "pt", "une", "$", "mod", "ify", "_", "event", "_", "sub", "scription", "_", "output", "()", "Ġconfig", "Ġ<-", "Ġget", "_", "config", "()", "Ġs", "vc", "Ġ<-", "Ġ.", "ne", "pt", "une", "$", "service", "(", "config", ")", "Ġrequest", "Ġ<-", "Ġnew", "_", "request", "(", "sv", "c", ",", "Ġop", ",", "Ġinput", ",", "Ġoutput", ")", "Ġresponse", "Ġ<-", "Ġsend", "_", "request", "(", "request", ")", "Ġreturn", "(", "response", ")", "Ġ}"], "docstring": "Modifies an existing event notification subscription", "docstring_tokens": ["Mod", "ifies", "Ġan", "Ġexisting", "Ġevent", "Ġnotification", "Ġsubscription"], "partition": "valid"}
{"path": "GitHub-Crawler-R/geobr-master/r-package/prep_data/prep_agro_census_tract.R", "language": "r", "code": "unzip_fun <- function(f){\n\nzip_path <- unlist(stringr::str_split(f,\"/\"))\nzip_path <- tail(zip_path , n=3)\nzip_path <- head(zip_path , n=2)\nzip_path <-paste(zip_path ,collapse  = \"/\")\n\nunzip(f, exdir = file.path(zip_path))\n}", "code_tokens": ["un", "zip", "_", "fun", "Ġ<-", "Ġfunction", "(", "f", "){", "Ġzip", "_", "path", "Ġ<-", "Ġun", "list", "(", "string", "r", "::", "str", "_", "split", "(", "f", ",\"", "/\"", "))", "Ġzip", "_", "path", "Ġ<-", "Ġtail", "(", "zip", "_", "path", "Ġ,", "Ġn", "=", "3", ")", "Ġzip", "_", "path", "Ġ<-", "Ġhead", "(", "zip", "_", "path", "Ġ,", "Ġn", "=", "2", ")", "Ġzip", "_", "path", "Ġ<-", "paste", "(", "zip", "_", "path", "Ġ,", "coll", "apse", "Ġ=", "Ġ\"/", "\")", "Ġun", "zip", "(", "f", ",", "Ġex", "dir", "Ġ=", "Ġfile", ".", "path", "(", "zip", "_", "path", "))", "Ġ}"], "docstring": "function to Unzip files in their original sub-dir", "docstring_tokens": ["function", "Ġto", "ĠUn", "zip", "Ġfiles", "Ġin", "Ġtheir", "Ġoriginal", "Ġsub", "dir"], "partition": "valid"}
{"path": "GitHub-Crawler-R/paws-main/paws/R/dax_operations.R", "language": "r", "code": "dax_describe_parameters <- function(ParameterGroupName, Source = NULL, MaxResults = NULL, NextToken = NULL) {\nop <- new_operation(\nname = \"DescribeParameters\",\nhttp_method = \"POST\",\nhttp_path = \"/\",\npaginator = list()\n)\ninput <- .dax$describe_parameters_input(ParameterGroupName = ParameterGroupName, Source = Source, MaxResults = MaxResults, NextToken = NextToken)\noutput <- .dax$describe_parameters_output()\nconfig <- get_config()\nsvc <- .dax$service(config)\nrequest <- new_request(svc, op, input, output)\nresponse <- send_request(request)\nreturn(response)\n}", "code_tokens": ["d", "ax", "_", "desc", "ribe", "_", "param", "eters", "Ġ<-", "Ġfunction", "(", "Parameter", "Group", "Name", ",", "ĠSource", "Ġ=", "ĠNULL", ",", "ĠMax", "Results", "Ġ=", "ĠNULL", ",", "ĠNext", "Token", "Ġ=", "ĠNULL", ")", "Ġ{", "Ġop", "Ġ<-", "Ġnew", "_", "operation", "(", "Ġname", "Ġ=", "Ġ\"", "Desc", "ribe", "Parameters", "\",", "Ġhttp", "_", "method", "Ġ=", "Ġ\"", "POST", "\",", "Ġhttp", "_", "path", "Ġ=", "Ġ\"/", "\",", "Ġpag", "inator", "Ġ=", "Ġlist", "()", "Ġ)", "Ġinput", "Ġ<-", "Ġ.", "d", "ax", "$", "desc", "ribe", "_", "param", "eters", "_", "input", "(", "Parameter", "Group", "Name", "Ġ=", "ĠParam", "eter", "Group", "Name", ",", "ĠSource", "Ġ=", "ĠSource", ",", "ĠMax", "Results", "Ġ=", "ĠMax", "Results", ",", "ĠNext", "Token", "Ġ=", "ĠNext", "Token", ")", "Ġoutput", "Ġ<-", "Ġ.", "d", "ax", "$", "desc", "ribe", "_", "param", "eters", "_", "output", "()", "Ġconfig", "Ġ<-", "Ġget", "_", "config", "()", "Ġs", "vc", "Ġ<-", "Ġ.", "d", "ax", "$", "service", "(", "config", ")", "Ġrequest", "Ġ<-", "Ġnew", "_", "request", "(", "sv", "c", ",", "Ġop", ",", "Ġinput", ",", "Ġoutput", ")", "Ġresponse", "Ġ<-", "Ġsend", "_", "request", "(", "request", ")", "Ġreturn", "(", "response", ")", "Ġ}"], "docstring": "Returns the detailed parameter list for a particular parameter group", "docstring_tokens": ["Returns", "Ġthe", "Ġdetailed", "Ġparameter", "Ġlist", "Ġfor", "Ġa", "Ġparticular", "Ġparameter", "Ġgroup"], "partition": "valid"}
{"path": "GitHub-Crawler-R/lubridate-main/R/accessors-minute.r", "language": "r", "code": "minute <- function(x) {\nUseMethod(\"minute\")\n}", "code_tokens": ["minute", "Ġ<-", "Ġfunction", "(", "x", ")", "Ġ{", "ĠUse", "Method", "(\"", "minute", "\")", "Ġ}"], "docstring": "Get/set minutes component of a date-time", "docstring_tokens": ["Get", "/", "set", "Ġminutes", "Ġcomponent", "Ġof", "Ġa", "Ġdat", "etime"], "partition": "valid"}
{"path": "GitHub-Crawler-R/paws-main/paws/R/codedeploy_operations.R", "language": "r", "code": "codedeploy_batch_get_applications <- function(applicationNames) {\nop <- new_operation(\nname = \"BatchGetApplications\",\nhttp_method = \"POST\",\nhttp_path = \"/\",\npaginator = list()\n)\ninput <- .codedeploy$batch_get_applications_input(applicationNames = applicationNames)\noutput <- .codedeploy$batch_get_applications_output()\nconfig <- get_config()\nsvc <- .codedeploy$service(config)\nrequest <- new_request(svc, op, input, output)\nresponse <- send_request(request)\nreturn(response)\n}", "code_tokens": ["coded", "e", "ploy", "_", "batch", "_", "get", "_", "app", "lic", "ations", "Ġ<-", "Ġfunction", "(", "application", "Names", ")", "Ġ{", "Ġop", "Ġ<-", "Ġnew", "_", "operation", "(", "Ġname", "Ġ=", "Ġ\"", "B", "atch", "Get", "Applications", "\",", "Ġhttp", "_", "method", "Ġ=", "Ġ\"", "POST", "\",", "Ġhttp", "_", "path", "Ġ=", "Ġ\"/", "\",", "Ġpag", "inator", "Ġ=", "Ġlist", "()", "Ġ)", "Ġinput", "Ġ<-", "Ġ.", "coded", "e", "ploy", "$", "batch", "_", "get", "_", "app", "lic", "ations", "_", "input", "(", "application", "Names", "Ġ=", "Ġapplication", "Names", ")", "Ġoutput", "Ġ<-", "Ġ.", "coded", "e", "ploy", "$", "batch", "_", "get", "_", "app", "lic", "ations", "_", "output", "()", "Ġconfig", "Ġ<-", "Ġget", "_", "config", "()", "Ġs", "vc", "Ġ<-", "Ġ.", "coded", "e", "ploy", "$", "service", "(", "config", ")", "Ġrequest", "Ġ<-", "Ġnew", "_", "request", "(", "sv", "c", ",", "Ġop", ",", "Ġinput", ",", "Ġoutput", ")", "Ġresponse", "Ġ<-", "Ġsend", "_", "request", "(", "request", ")", "Ġreturn", "(", "response", ")", "Ġ}"], "docstring": "Gets information about one or more applications", "docstring_tokens": ["G", "ets", "Ġinformation", "Ġabout", "Ġone", "Ġor", "Ġmore", "Ġapplications"], "partition": "valid"}
{"path": "GitHub-Crawler-R/paws-main/paws/R/synthetics_operations.R", "language": "r", "code": "synthetics_associate_resource <- function(GroupIdentifier, ResourceArn) {\nop <- new_operation(\nname = \"AssociateResource\",\nhttp_method = \"PATCH\",\nhttp_path = \"/group/{groupIdentifier}/associate\",\npaginator = list()\n)\ninput <- .synthetics$associate_resource_input(GroupIdentifier = GroupIdentifier, ResourceArn = ResourceArn)\noutput <- .synthetics$associate_resource_output()\nconfig <- get_config()\nsvc <- .synthetics$service(config)\nrequest <- new_request(svc, op, input, output)\nresponse <- send_request(request)\nreturn(response)\n}", "code_tokens": ["sy", "nt", "hetics", "_", "ass", "ociate", "_", "resource", "Ġ<-", "Ġfunction", "(", "Group", "Ident", "ifier", ",", "ĠResource", "Ar", "n", ")", "Ġ{", "Ġop", "Ġ<-", "Ġnew", "_", "operation", "(", "Ġname", "Ġ=", "Ġ\"", "Ass", "ociate", "Resource", "\",", "Ġhttp", "_", "method", "Ġ=", "Ġ\"", "P", "ATCH", "\",", "Ġhttp", "_", "path", "Ġ=", "Ġ\"/", "group", "/", "{", "group", "Ident", "ifier", "}", "/", "ass", "ociate", "\",", "Ġpag", "inator", "Ġ=", "Ġlist", "()", "Ġ)", "Ġinput", "Ġ<-", "Ġ.", "sy", "nt", "hetics", "$", "ass", "ociate", "_", "resource", "_", "input", "(", "Group", "Ident", "ifier", "Ġ=", "ĠGroup", "Ident", "ifier", ",", "ĠResource", "Ar", "n", "Ġ=", "ĠResource", "Ar", "n", ")", "Ġoutput", "Ġ<-", "Ġ.", "sy", "nt", "hetics", "$", "ass", "ociate", "_", "resource", "_", "output", "()", "Ġconfig", "Ġ<-", "Ġget", "_", "config", "()", "Ġs", "vc", "Ġ<-", "Ġ.", "sy", "nt", "hetics", "$", "service", "(", "config", ")", "Ġrequest", "Ġ<-", "Ġnew", "_", "request", "(", "sv", "c", ",", "Ġop", ",", "Ġinput", ",", "Ġoutput", ")", "Ġresponse", "Ġ<-", "Ġsend", "_", "request", "(", "request", ")", "Ġreturn", "(", "response", ")", "Ġ}"], "docstring": "Associates a canary with a group", "docstring_tokens": ["Ass", "oci", "ates", "Ġa", "Ġcan", "ary", "Ġwith", "Ġa", "Ġgroup"], "partition": "valid"}
{"path": "GitHub-Crawler-R/paws-main/paws/R/servicecatalog_operations.R", "language": "r", "code": "servicecatalog_update_constraint <- function(AcceptLanguage = NULL, Id, Description = NULL, Parameters = NULL) {\nop <- new_operation(\nname = \"UpdateConstraint\",\nhttp_method = \"POST\",\nhttp_path = \"/\",\npaginator = list()\n)\ninput <- .servicecatalog$update_constraint_input(AcceptLanguage = AcceptLanguage, Id = Id, Description = Description, Parameters = Parameters)\noutput <- .servicecatalog$update_constraint_output()\nconfig <- get_config()\nsvc <- .servicecatalog$service(config)\nrequest <- new_request(svc, op, input, output)\nresponse <- send_request(request)\nreturn(response)\n}", "code_tokens": ["service", "cat", "alog", "_", "update", "_", "con", "str", "aint", "Ġ<-", "Ġfunction", "(", "Accept", "Language", "Ġ=", "ĠNULL", ",", "ĠId", ",", "ĠDescription", "Ġ=", "ĠNULL", ",", "ĠParameters", "Ġ=", "ĠNULL", ")", "Ġ{", "Ġop", "Ġ<-", "Ġnew", "_", "operation", "(", "Ġname", "Ġ=", "Ġ\"", "Update", "Con", "str", "aint", "\",", "Ġhttp", "_", "method", "Ġ=", "Ġ\"", "POST", "\",", "Ġhttp", "_", "path", "Ġ=", "Ġ\"/", "\",", "Ġpag", "inator", "Ġ=", "Ġlist", "()", "Ġ)", "Ġinput", "Ġ<-", "Ġ.", "service", "cat", "alog", "$", "update", "_", "con", "str", "aint", "_", "input", "(", "Accept", "Language", "Ġ=", "ĠAccept", "Language", ",", "ĠId", "Ġ=", "ĠId", ",", "ĠDescription", "Ġ=", "ĠDescription", ",", "ĠParameters", "Ġ=", "ĠParameters", ")", "Ġoutput", "Ġ<-", "Ġ.", "service", "cat", "alog", "$", "update", "_", "con", "str", "aint", "_", "output", "()", "Ġconfig", "Ġ<-", "Ġget", "_", "config", "()", "Ġs", "vc", "Ġ<-", "Ġ.", "service", "cat", "alog", "$", "service", "(", "config", ")", "Ġrequest", "Ġ<-", "Ġnew", "_", "request", "(", "sv", "c", ",", "Ġop", ",", "Ġinput", ",", "Ġoutput", ")", "Ġresponse", "Ġ<-", "Ġsend", "_", "request", "(", "request", ")", "Ġreturn", "(", "response", ")", "Ġ}"], "docstring": "Updates the specified constraint", "docstring_tokens": ["Up", "dates", "Ġthe", "Ġspecified", "Ġconstraint"], "partition": "valid"}
{"path": "GitHub-Crawler-R/rstatix-master/R/utilities.R", "language": "r", "code": "tibble_to_matrix <- function(x){\nx <-  as.data.frame(x)\nrownames(x) <- x[, 1]\nx <- x[, -1]\nas.matrix(x)\n}", "code_tokens": ["t", "ibble", "_", "to", "_", "mat", "rix", "Ġ<-", "Ġfunction", "(", "x", "){", "Ġx", "Ġ<-", "Ġas", ".", "data", ".", "frame", "(", "x", ")", "Ġro", "wn", "ames", "(", "x", ")", "Ġ<-", "Ġx", "[", ",", "Ġ1", "]", "Ġx", "Ġ<-", "Ġx", "[", ",", "Ġ-", "1", "]", "Ġas", ".", "mat", "rix", "(", "x", ")", "Ġ}"], "docstring": "Convert a tbl to matrix", "docstring_tokens": ["Con", "vert", "Ġa", "Ġt", "bl", "Ġto", "Ġmatrix"], "partition": "valid"}
{"path": "GitHub-Crawler-R/microsoft-r-open-master/source/src/library/tools/R/bibstyle.R", "language": "r", "code": "authorList <- function(paper) {\nnames <- sapply(paper$author, shortName)\nif (length(names) > 1)\nresult <- paste( paste(names[-length(names)], collapse=\", \"),\n\"and\", names[length(names)])\nelse\nresult <- names\nresult\n}", "code_tokens": ["author", "List", "Ġ<-", "Ġfunction", "(", "paper", ")", "Ġ{", "Ġnames", "Ġ<-", "Ġsa", "pp", "ly", "(", "paper", "$", "author", ",", "Ġshort", "Name", ")", "Ġif", "Ġ(", "length", "(", "names", ")", "Ġ>", "Ġ1", ")", "Ġresult", "Ġ<-", "Ġpaste", "(", "Ġpaste", "(", "names", "[", "-", "length", "(", "names", ")", "],", "Ġcollapse", "=", "\",", "Ġ\"", "),", "Ġ\"", "and", "\",", "Ġnames", "[", "length", "(", "names", ")", "])", "Ġelse", "Ġresult", "Ġ<-", "Ġnames", "Ġresult", "Ġ}"], "docstring": "Format all authors for one paper", "docstring_tokens": ["Format", "Ġall", "Ġauthors", "Ġfor", "Ġone", "Ġpaper"], "partition": "valid"}